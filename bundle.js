(()=>{"use strict";var n={402:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),a=t(645),A=t.n(a)()(r());A.push([n.id,':root{\n    --bg-color :  rgb(0, 255, 187);\n    --font-fam : \'Poppins\', sans-serif;\n    --clr-white : #fff;\n    --clr-dark : #000000dc;\n    --font-light : 300;\n    --font-semi-bold : 500;\n    --font-bold : 700;\n    --font-size : 1.5rem;\n}\n\n*{\n    font-family: var(--font-fam);\n}\n\nbody{\n    font-size: 1.1rem;\n    box-sizing: border-box;\n    margin: 0;\n    background-color: var(--bg-color);\n    display: grid;\n\n    grid: \n        "header header header header" auto\n        "...... lists  active ......" auto /\n        1fr minmax(100px , 300px) minmax(250px , 500px) 1fr;\n    column-gap: 50px;\n}\n\n.title{\n    grid-area: header;\n    text-align: center;\n    font-size: calc(8vw + 1rem);\n    font-weight: 900;\n    color: rgba(0, 0, 0, 0.1);\n    margin: -0.4em 0 0.1em;\n    \n}\n\n.all-tasks{\n    grid-area: lists;\n}\n\n.task-list{\n    line-height: 1.7;\n    font-size: 1.2rem;\n    list-style: circle;\n    padding-left: 1.1em;\n}\n\n.list-name{\n    cursor: pointer;\n    transition: all 0.1s ease;\n}\n\n.list-name:hover{\n    opacity: 0.6;\n}\n\nform{\n    display: flex;\n}\n\n.btn{\n    cursor: pointer;\n    background: 0;\n    border: 0;\n    padding: 0;\n    color: inherit;\n}\n\n.btn.create{\n    font-size: 1.7rem;\n    font-weight: 900;\n    margin-right: 0.25rem;\n\n    transition: opacity 250ms ease-in;\n}\n\n.btn.create:hover{\n    opacity: 0.7;\n}\n\n.btn.delete{\n    font-weight: var(--font-light);\n    opacity: 0.9;\n    font-size: 1rem;\n    transition: all 0.2s;\n\n}\n\n.btn.delete:hover{\n    color: red;\n}\n\n\n.new {\n    background-color: transparent;\n    border: 0;\n    color: inherit;\n    border-bottom: 1px solid currentColor;\n    font-size: inherit;\n    outline: none;\n    padding: 0.25rem;\n\n\n    transition: border-bottom 150ms ease-in;\n    order: 2;\n}\n\n.new::placeholder{\n    opacity: 0.4;\n}\n\n\n.new:focus{\n    border-bottom-width: 3px;\n}\n\n.new:focus::placeholder{\n    opacity: 0.15;\n}\n\n.new.list{\n    font-size: 1rem;\n}\n\n.new.task{\n    margin-bottom: 0;\n}\n\n.active-list{\n    font-weight: var(--font-bold);\n}\n\n.todo-list{\n    --spacer : 2rem;\n\n    grid-area: active;\n    background: white;\n    color: black;\n}\n\n.todo-header{\n    padding: var(--spacer);\n    background-color: #e4e4e4;\n   \n\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n}\n\n.list-title{\n    font-size: x-large;\n    margin: 0 1rem 0 0;\n}\n\n.task-count{\n    margin: 0;\n    font-size: 0.9rem;\n}\n\n.todo-body{\n    padding: var(--spacer);\n    position: relative;\n}\n\n.new-task-creator .create{\n    color: black;\n}\n\n.tasks{\n    font-size: 1.1rem;\n}\n\n[type="checkbox"] {\n    opacity: 0;\n    position: absolute;\n}\n\n\n.task label{\n    display: inline-flex;\n    align-items: center;\n    position: relative;\n    \n}\n\n.task{\n    position: relative;\n    margin-bottom: 1.25em;\n}\n\n.task::after{\n    content: "";\n    position: absolute;\n    height: 1px;\n    right: 0;\n    left: 0;\n    bottom: -0.5em;\n    background-color: currentColor;\n    opacity: 0.1;\n}\n\n.custom-checkbox{\n    --size : 0.65em;\n    display: inline-block;\n    width: var(--size);\n    height: var(--size);\n    cursor: pointer;\n    border: 2px solid currentColor;\n    border-radius: 50%;\n    margin-right: var(--size);\n    transform: scale(1);\n    transition: transform 200ms ease-in-out;\n}\n\n.task:hover .custom-checkbox,\n[type="checkbox"]:focus + label .custom-checkbox  {\n    transform: scale(1.3);\n    color: var(--bg-color), ;\n}\n\n[type="checkbox"]:checked + label .custom-checkbox {\n    background: var(--bg-color);\n    border-color: var(--bg-color);\n    box-shadow: inset 0 0 0 2px white;\n}\n\n[type="checkbox"]:checked + label{\n    opacity: 0.5;\n}\n\n[type="checkbox"]:checked + label{\n    text-decoration: line-through;\n    transition: all 0.3s ease;\n}\n\n\n.delete-stuff{\n    display: flex;\n    justify-content: space-evenly;\n    position: absolute;\n    width: 100%;\n    left: 0;\n    bottom: -35px;\n    color: black;\n}\n\n\n\n@media screen and (max-width : 860px){\n    body{\n        display: grid;\n\n        grid: \n            "header header header" \n            "...... lists  ......" auto\n            "...... active ......" auto /\n            1fr minmax(250px , 500px) 1fr;\n    }\n\n    .all-tasks{\n        margin: 0 0 20px 0;\n    }\n}\n\n',"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;IACI,8BAA8B;IAC9B,kCAAkC;IAClC,kBAAkB;IAClB,sBAAsB;IACtB,kBAAkB;IAClB,sBAAsB;IACtB,iBAAiB;IACjB,oBAAoB;AACxB;;AAEA;IACI,4BAA4B;AAChC;;AAEA;IACI,iBAAiB;IACjB,sBAAsB;IACtB,SAAS;IACT,iCAAiC;IACjC,aAAa;;IAEb;;;2DAGuD;IACvD,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,2BAA2B;IAC3B,gBAAgB;IAChB,yBAAyB;IACzB,sBAAsB;;AAE1B;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,yBAAyB;AAC7B;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,eAAe;IACf,aAAa;IACb,SAAS;IACT,UAAU;IACV,cAAc;AAClB;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,qBAAqB;;IAErB,iCAAiC;AACrC;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,8BAA8B;IAC9B,YAAY;IACZ,eAAe;IACf,oBAAoB;;AAExB;;AAEA;IACI,UAAU;AACd;;;AAGA;IACI,6BAA6B;IAC7B,SAAS;IACT,cAAc;IACd,qCAAqC;IACrC,kBAAkB;IAClB,aAAa;IACb,gBAAgB;;;IAGhB,uCAAuC;IACvC,QAAQ;AACZ;;AAEA;IACI,YAAY;AAChB;;;AAGA;IACI,wBAAwB;AAC5B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,eAAe;;IAEf,iBAAiB;IACjB,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,sBAAsB;IACtB,yBAAyB;;;IAGzB,aAAa;IACb,mBAAmB;IACnB,8BAA8B;;AAElC;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,sBAAsB;IACtB,kBAAkB;AACtB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,UAAU;IACV,kBAAkB;AACtB;;;AAGA;IACI,oBAAoB;IACpB,mBAAmB;IACnB,kBAAkB;;AAEtB;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;AACzB;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,WAAW;IACX,QAAQ;IACR,OAAO;IACP,cAAc;IACd,8BAA8B;IAC9B,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,qBAAqB;IACrB,kBAAkB;IAClB,mBAAmB;IACnB,eAAe;IACf,8BAA8B;IAC9B,kBAAkB;IAClB,yBAAyB;IACzB,mBAAmB;IACnB,uCAAuC;AAC3C;;AAEA;;IAEI,qBAAqB;IACrB,wBAAwB;AAC5B;;AAEA;IACI,2BAA2B;IAC3B,6BAA6B;IAC7B,iCAAiC;AACrC;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,6BAA6B;IAC7B,yBAAyB;AAC7B;;;AAGA;IACI,aAAa;IACb,6BAA6B;IAC7B,kBAAkB;IAClB,WAAW;IACX,OAAO;IACP,aAAa;IACb,YAAY;AAChB;;;;AAIA;IACI;QACI,aAAa;;QAEb;;;;yCAIiC;IACrC;;IAEA;QACI,kBAAkB;IACtB;AACJ",sourcesContent:[':root{\n    --bg-color :  rgb(0, 255, 187);\n    --font-fam : \'Poppins\', sans-serif;\n    --clr-white : #fff;\n    --clr-dark : #000000dc;\n    --font-light : 300;\n    --font-semi-bold : 500;\n    --font-bold : 700;\n    --font-size : 1.5rem;\n}\n\n*{\n    font-family: var(--font-fam);\n}\n\nbody{\n    font-size: 1.1rem;\n    box-sizing: border-box;\n    margin: 0;\n    background-color: var(--bg-color);\n    display: grid;\n\n    grid: \n        "header header header header" auto\n        "...... lists  active ......" auto /\n        1fr minmax(100px , 300px) minmax(250px , 500px) 1fr;\n    column-gap: 50px;\n}\n\n.title{\n    grid-area: header;\n    text-align: center;\n    font-size: calc(8vw + 1rem);\n    font-weight: 900;\n    color: rgba(0, 0, 0, 0.1);\n    margin: -0.4em 0 0.1em;\n    \n}\n\n.all-tasks{\n    grid-area: lists;\n}\n\n.task-list{\n    line-height: 1.7;\n    font-size: 1.2rem;\n    list-style: circle;\n    padding-left: 1.1em;\n}\n\n.list-name{\n    cursor: pointer;\n    transition: all 0.1s ease;\n}\n\n.list-name:hover{\n    opacity: 0.6;\n}\n\nform{\n    display: flex;\n}\n\n.btn{\n    cursor: pointer;\n    background: 0;\n    border: 0;\n    padding: 0;\n    color: inherit;\n}\n\n.btn.create{\n    font-size: 1.7rem;\n    font-weight: 900;\n    margin-right: 0.25rem;\n\n    transition: opacity 250ms ease-in;\n}\n\n.btn.create:hover{\n    opacity: 0.7;\n}\n\n.btn.delete{\n    font-weight: var(--font-light);\n    opacity: 0.9;\n    font-size: 1rem;\n    transition: all 0.2s;\n\n}\n\n.btn.delete:hover{\n    color: red;\n}\n\n\n.new {\n    background-color: transparent;\n    border: 0;\n    color: inherit;\n    border-bottom: 1px solid currentColor;\n    font-size: inherit;\n    outline: none;\n    padding: 0.25rem;\n\n\n    transition: border-bottom 150ms ease-in;\n    order: 2;\n}\n\n.new::placeholder{\n    opacity: 0.4;\n}\n\n\n.new:focus{\n    border-bottom-width: 3px;\n}\n\n.new:focus::placeholder{\n    opacity: 0.15;\n}\n\n.new.list{\n    font-size: 1rem;\n}\n\n.new.task{\n    margin-bottom: 0;\n}\n\n.active-list{\n    font-weight: var(--font-bold);\n}\n\n.todo-list{\n    --spacer : 2rem;\n\n    grid-area: active;\n    background: white;\n    color: black;\n}\n\n.todo-header{\n    padding: var(--spacer);\n    background-color: #e4e4e4;\n   \n\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n}\n\n.list-title{\n    font-size: x-large;\n    margin: 0 1rem 0 0;\n}\n\n.task-count{\n    margin: 0;\n    font-size: 0.9rem;\n}\n\n.todo-body{\n    padding: var(--spacer);\n    position: relative;\n}\n\n.new-task-creator .create{\n    color: black;\n}\n\n.tasks{\n    font-size: 1.1rem;\n}\n\n[type="checkbox"] {\n    opacity: 0;\n    position: absolute;\n}\n\n\n.task label{\n    display: inline-flex;\n    align-items: center;\n    position: relative;\n    \n}\n\n.task{\n    position: relative;\n    margin-bottom: 1.25em;\n}\n\n.task::after{\n    content: "";\n    position: absolute;\n    height: 1px;\n    right: 0;\n    left: 0;\n    bottom: -0.5em;\n    background-color: currentColor;\n    opacity: 0.1;\n}\n\n.custom-checkbox{\n    --size : 0.65em;\n    display: inline-block;\n    width: var(--size);\n    height: var(--size);\n    cursor: pointer;\n    border: 2px solid currentColor;\n    border-radius: 50%;\n    margin-right: var(--size);\n    transform: scale(1);\n    transition: transform 200ms ease-in-out;\n}\n\n.task:hover .custom-checkbox,\n[type="checkbox"]:focus + label .custom-checkbox  {\n    transform: scale(1.3);\n    color: var(--bg-color), ;\n}\n\n[type="checkbox"]:checked + label .custom-checkbox {\n    background: var(--bg-color);\n    border-color: var(--bg-color);\n    box-shadow: inset 0 0 0 2px white;\n}\n\n[type="checkbox"]:checked + label{\n    opacity: 0.5;\n}\n\n[type="checkbox"]:checked + label{\n    text-decoration: line-through;\n    transition: all 0.3s ease;\n}\n\n\n.delete-stuff{\n    display: flex;\n    justify-content: space-evenly;\n    position: absolute;\n    width: 100%;\n    left: 0;\n    bottom: -35px;\n    color: black;\n}\n\n\n\n@media screen and (max-width : 860px){\n    body{\n        display: grid;\n\n        grid: \n            "header header header" \n            "...... lists  ......" auto\n            "...... active ......" auto /\n            1fr minmax(250px , 500px) 1fr;\n    }\n\n    .all-tasks{\n        margin: 0 0 20px 0;\n    }\n}\n\n'],sourceRoot:""}]);const i=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(A[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&A[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},A=[],i=0;i<n.length;i++){var s=n[i],c=o.base?s[0]+o.base:s[0],l=a[c]||0,d="".concat(c," ").concat(l);a[c]=l+1;var u=t(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var B=r(p,o);o.byIndex=i,e.splice(i,0,{identifier:d,updater:B,references:1})}A.push(d)}return A}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var A=0;A<a.length;A++){var i=t(a[A]);e[i].references--}for(var s=o(n,r),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),A=t.n(a),i=t(565),s=t.n(i),c=t(216),l=t.n(c),d=t(589),u=t.n(d),p=t(402),B={};B.styleTagTransform=u(),B.setAttributes=s(),B.insert=A().bind(null,"head"),B.domAPI=r(),B.insertStyleElement=l(),e()(p.Z,B),p.Z&&p.Z.locals&&p.Z.locals;const m=document.querySelector("[data-lists]"),f=document.querySelector("[data-new-list-form]"),C=document.querySelector("[data-new-list-input]"),I=document.querySelector("[data-delete-list-button]"),h=document.querySelector("[data-list-display-container]"),b=document.querySelector("[data-list-title]"),g=document.querySelector("[data-list-count]"),k=document.querySelector("[data-tasks]"),v=document.getElementById("task-template"),y=document.querySelector("[data-new-task-form]"),x=document.querySelector("[data-new-task-input]"),w=document.querySelector("[data-clear-complete-tasks-button]"),E="task.lists",S="task.selectedListId";let z=JSON.parse(localStorage.getItem(E))||[],q=localStorage.getItem(S);function j(){Y(),T()}function Y(){localStorage.setItem(E,JSON.stringify(z)),localStorage.setItem(S,q)}function T(){O(m),z.forEach((n=>{const e=document.createElement("li");e.dataset.listId=n.id,e.classList.add("list-name"),e.innerText=n.name,n.id===q&&e.classList.add("active-list"),m.appendChild(e)}));const n=z.find((n=>n.id===q));null==q?h.style.display="none":(h.style.display="",b.innerText=n.name,L(n),O(k),function(n){n.tasks.forEach((n=>{const e=document.importNode(v.content,!0),t=e.querySelector("input");t.id=n.id,t.checked=n.complete;const o=e.querySelector("label");o.htmlFor=n.id,o.append(n.name),k.appendChild(e)}))}(n))}function L(n){const e=n.tasks.filter((n=>!n.complete)).length,t=1===e?"task":"tasks";g.innerText=`${e} ${t} remaining`}function O(n){for(;n.firstChild;)n.removeChild(n.firstChild)}m.addEventListener("click",(n=>{"li"===n.target.tagName.toLowerCase()&&(console.log(n.target),q=n.target.dataset.listId,j())})),k.addEventListener("click",(n=>{if("input"===n.target.tagName.toLowerCase()){const e=z.find((n=>n.id===q));e.tasks.find((e=>e.id===n.target.id)).complete=n.target.checked,Y(),L(e)}})),w.addEventListener("click",(n=>{const e=z.find((n=>n.id===q));e.tasks=e.tasks.filter((n=>!n.complete)),j()})),I.addEventListener("click",(n=>{z=z.filter((n=>n.id!==q)),q=null,j()})),f.addEventListener("submit",(n=>{n.preventDefault();const e=C.value;if(null==e||""===e)return;const t=(o=e,{id:Date.now().toString(),name:o,tasks:[]});var o;C.value=null,z.push(t),j()})),y.addEventListener("submit",(n=>{n.preventDefault();const e=x.value;if(null==e||""===e)return;const t=(o=e,{id:Date.now().toString(),name:o,complete:!1});var o;x.value=null,z.find((n=>n.id===q)).tasks.push(t),j()})),T(),localStorage.clear()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RixNQUFNSyxFQUFXbEQsRUFBYStDLE1BQzlCLEdBQWtCLE1BQWJHLEdBQWtDLEtBQWJBLEVBQWlCLE9BQzNDLE1BQU12QixHQWdCV04sRUFoQk82QixFQWlCakIsQ0FDSGxMLEdBQUlnTCxLQUFLQyxNQUFNN0ssV0FDZmlKLEtBQU9BLEVBQ1BXLFVBQVUsSUFKbEIsSUFBcUJYLEVBZmpCckIsRUFBYStDLE1BQVEsS0FDQTNDLEVBQU1tQixNQUFLcEosR0FBUUEsRUFBS0gsS0FBT3dJLElBQ3ZDa0IsTUFBTTVKLEtBQUs2SixHQUN4QmxCLEdBQWUsSUFzRm5CRSxJQUVBTCxhQUFhNkMsTyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8vLi9zcmMvY3NzL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RvZG8vd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvZG8vd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3RvZG8vLi9zcmMvY3NzL3N0eWxlLmNzcz85ZmNkIiwid2VicGFjazovL3RvZG8vLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYDpyb290e1xuICAgIC0tYmctY29sb3IgOiAgcmdiKDAsIDI1NSwgMTg3KTtcbiAgICAtLWZvbnQtZmFtIDogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xuICAgIC0tY2xyLXdoaXRlIDogI2ZmZjtcbiAgICAtLWNsci1kYXJrIDogIzAwMDAwMGRjO1xuICAgIC0tZm9udC1saWdodCA6IDMwMDtcbiAgICAtLWZvbnQtc2VtaS1ib2xkIDogNTAwO1xuICAgIC0tZm9udC1ib2xkIDogNzAwO1xuICAgIC0tZm9udC1zaXplIDogMS41cmVtO1xufVxuXG4qe1xuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbSk7XG59XG5cbmJvZHl7XG4gICAgZm9udC1zaXplOiAxLjFyZW07XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBtYXJnaW46IDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmctY29sb3IpO1xuICAgIGRpc3BsYXk6IGdyaWQ7XG5cbiAgICBncmlkOiBcbiAgICAgICAgXCJoZWFkZXIgaGVhZGVyIGhlYWRlciBoZWFkZXJcIiBhdXRvXG4gICAgICAgIFwiLi4uLi4uIGxpc3RzICBhY3RpdmUgLi4uLi4uXCIgYXV0byAvXG4gICAgICAgIDFmciBtaW5tYXgoMTAwcHggLCAzMDBweCkgbWlubWF4KDI1MHB4ICwgNTAwcHgpIDFmcjtcbiAgICBjb2x1bW4tZ2FwOiA1MHB4O1xufVxuXG4udGl0bGV7XG4gICAgZ3JpZC1hcmVhOiBoZWFkZXI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogY2FsYyg4dncgKyAxcmVtKTtcbiAgICBmb250LXdlaWdodDogOTAwO1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gICAgbWFyZ2luOiAtMC40ZW0gMCAwLjFlbTtcbiAgICBcbn1cblxuLmFsbC10YXNrc3tcbiAgICBncmlkLWFyZWE6IGxpc3RzO1xufVxuXG4udGFzay1saXN0e1xuICAgIGxpbmUtaGVpZ2h0OiAxLjc7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gICAgbGlzdC1zdHlsZTogY2lyY2xlO1xuICAgIHBhZGRpbmctbGVmdDogMS4xZW07XG59XG5cbi5saXN0LW5hbWV7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjFzIGVhc2U7XG59XG5cbi5saXN0LW5hbWU6aG92ZXJ7XG4gICAgb3BhY2l0eTogMC42O1xufVxuXG5mb3Jte1xuICAgIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5idG57XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJhY2tncm91bmQ6IDA7XG4gICAgYm9yZGVyOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgY29sb3I6IGluaGVyaXQ7XG59XG5cbi5idG4uY3JlYXRle1xuICAgIGZvbnQtc2l6ZTogMS43cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwLjI1cmVtO1xuXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAyNTBtcyBlYXNlLWluO1xufVxuXG4uYnRuLmNyZWF0ZTpob3ZlcntcbiAgICBvcGFjaXR5OiAwLjc7XG59XG5cbi5idG4uZGVsZXRle1xuICAgIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LWxpZ2h0KTtcbiAgICBvcGFjaXR5OiAwLjk7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjJzO1xuXG59XG5cbi5idG4uZGVsZXRlOmhvdmVye1xuICAgIGNvbG9yOiByZWQ7XG59XG5cblxuLm5ldyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyOiAwO1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgcGFkZGluZzogMC4yNXJlbTtcblxuXG4gICAgdHJhbnNpdGlvbjogYm9yZGVyLWJvdHRvbSAxNTBtcyBlYXNlLWluO1xuICAgIG9yZGVyOiAyO1xufVxuXG4ubmV3OjpwbGFjZWhvbGRlcntcbiAgICBvcGFjaXR5OiAwLjQ7XG59XG5cblxuLm5ldzpmb2N1c3tcbiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAzcHg7XG59XG5cbi5uZXc6Zm9jdXM6OnBsYWNlaG9sZGVye1xuICAgIG9wYWNpdHk6IDAuMTU7XG59XG5cbi5uZXcubGlzdHtcbiAgICBmb250LXNpemU6IDFyZW07XG59XG5cbi5uZXcudGFza3tcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uYWN0aXZlLWxpc3R7XG4gICAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtYm9sZCk7XG59XG5cbi50b2RvLWxpc3R7XG4gICAgLS1zcGFjZXIgOiAycmVtO1xuXG4gICAgZ3JpZC1hcmVhOiBhY3RpdmU7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgY29sb3I6IGJsYWNrO1xufVxuXG4udG9kby1oZWFkZXJ7XG4gICAgcGFkZGluZzogdmFyKC0tc3BhY2VyKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTRlNGU0O1xuICAgXG5cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXG59XG5cbi5saXN0LXRpdGxle1xuICAgIGZvbnQtc2l6ZTogeC1sYXJnZTtcbiAgICBtYXJnaW46IDAgMXJlbSAwIDA7XG59XG5cbi50YXNrLWNvdW50e1xuICAgIG1hcmdpbjogMDtcbiAgICBmb250LXNpemU6IDAuOXJlbTtcbn1cblxuLnRvZG8tYm9keXtcbiAgICBwYWRkaW5nOiB2YXIoLS1zcGFjZXIpO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLm5ldy10YXNrLWNyZWF0b3IgLmNyZWF0ZXtcbiAgICBjb2xvcjogYmxhY2s7XG59XG5cbi50YXNrc3tcbiAgICBmb250LXNpemU6IDEuMXJlbTtcbn1cblxuW3R5cGU9XCJjaGVja2JveFwiXSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cblxuLnRhc2sgbGFiZWx7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgXG59XG5cbi50YXNre1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjI1ZW07XG59XG5cbi50YXNrOjphZnRlcntcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJvdHRvbTogLTAuNWVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBvcGFjaXR5OiAwLjE7XG59XG5cbi5jdXN0b20tY2hlY2tib3h7XG4gICAgLS1zaXplIDogMC42NWVtO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogdmFyKC0tc2l6ZSk7XG4gICAgaGVpZ2h0OiB2YXIoLS1zaXplKTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYm9yZGVyOiAycHggc29saWQgY3VycmVudENvbG9yO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBtYXJnaW4tcmlnaHQ6IHZhcigtLXNpemUpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDIwMG1zIGVhc2UtaW4tb3V0O1xufVxuXG4udGFzazpob3ZlciAuY3VzdG9tLWNoZWNrYm94LFxuW3R5cGU9XCJjaGVja2JveFwiXTpmb2N1cyArIGxhYmVsIC5jdXN0b20tY2hlY2tib3ggIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMyk7XG4gICAgY29sb3I6IHZhcigtLWJnLWNvbG9yKSwgO1xufVxuXG5bdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgKyBsYWJlbCAuY3VzdG9tLWNoZWNrYm94IHtcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1iZy1jb2xvcik7XG4gICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1iZy1jb2xvcik7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMnB4IHdoaXRlO1xufVxuXG5bdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgKyBsYWJlbHtcbiAgICBvcGFjaXR5OiAwLjU7XG59XG5cblt0eXBlPVwiY2hlY2tib3hcIl06Y2hlY2tlZCArIGxhYmVse1xuICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG5cblxuLmRlbGV0ZS1zdHVmZntcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBsZWZ0OiAwO1xuICAgIGJvdHRvbTogLTM1cHg7XG4gICAgY29sb3I6IGJsYWNrO1xufVxuXG5cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aCA6IDg2MHB4KXtcbiAgICBib2R5e1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuXG4gICAgICAgIGdyaWQ6IFxuICAgICAgICAgICAgXCJoZWFkZXIgaGVhZGVyIGhlYWRlclwiIFxuICAgICAgICAgICAgXCIuLi4uLi4gbGlzdHMgIC4uLi4uLlwiIGF1dG9cbiAgICAgICAgICAgIFwiLi4uLi4uIGFjdGl2ZSAuLi4uLi5cIiBhdXRvIC9cbiAgICAgICAgICAgIDFmciBtaW5tYXgoMjUwcHggLCA1MDBweCkgMWZyO1xuICAgIH1cblxuICAgIC5hbGwtdGFza3N7XG4gICAgICAgIG1hcmdpbjogMCAwIDIwcHggMDtcbiAgICB9XG59XG5cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Nzcy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSw4QkFBOEI7SUFDOUIsa0NBQWtDO0lBQ2xDLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixpQkFBaUI7SUFDakIs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Qzs7SUFFQTtRQUNJLGtCQUFrQjtJQUN0QjtBQUNKXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIjpyb290e1xcbiAgICAtLWJnLWNvbG9yIDogIHJnYigwLCAyNTUsIDE4Nyk7XFxuICAgIC0tZm9udC1mYW0gOiAnUG9wcGlucycsIHNhbnMtc2VyaWY7XFxuICAgIC0tY2xyLXdoaXRlIDogI2ZmZjtcXG4gICAgLS1jbHItZGFyayA6ICMwMDAwMDBkYztcXG4gICAgLS1mb250LWxpZ2h0IDogMzAwO1xcbiAgICAtLWZvbnQtc2VtaS1ib2xkIDogNTAwO1xcbiAgICAtLWZvbnQtYm9sZCA6IDcwMDtcXG4gICAgLS1mb250LXNpemUgOiAxLjVyZW07XFxufVxcblxcbip7XFxuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbSk7XFxufVxcblxcbmJvZHl7XFxuICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgICBtYXJnaW46IDA7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJnLWNvbG9yKTtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG5cXG4gICAgZ3JpZDogXFxuICAgICAgICBcXFwiaGVhZGVyIGhlYWRlciBoZWFkZXIgaGVhZGVyXFxcIiBhdXRvXFxuICAgICAgICBcXFwiLi4uLi4uIGxpc3RzICBhY3RpdmUgLi4uLi4uXFxcIiBhdXRvIC9cXG4gICAgICAgIDFmciBtaW5tYXgoMTAwcHggLCAzMDBweCkgbWlubWF4KDI1MHB4ICwgNTAwcHgpIDFmcjtcXG4gICAgY29sdW1uLWdhcDogNTBweDtcXG59XFxuXFxuLnRpdGxle1xcbiAgICBncmlkLWFyZWE6IGhlYWRlcjtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBmb250LXNpemU6IGNhbGMoOHZ3ICsgMXJlbSk7XFxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XFxuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSk7XFxuICAgIG1hcmdpbjogLTAuNGVtIDAgMC4xZW07XFxuICAgIFxcbn1cXG5cXG4uYWxsLXRhc2tze1xcbiAgICBncmlkLWFyZWE6IGxpc3RzO1xcbn1cXG5cXG4udGFzay1saXN0e1xcbiAgICBsaW5lLWhlaWdodDogMS43O1xcbiAgICBmb250LXNpemU6IDEuMnJlbTtcXG4gICAgbGlzdC1zdHlsZTogY2lyY2xlO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDEuMWVtO1xcbn1cXG5cXG4ubGlzdC1uYW1le1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIHRyYW5zaXRpb246IGFsbCAwLjFzIGVhc2U7XFxufVxcblxcbi5saXN0LW5hbWU6aG92ZXJ7XFxuICAgIG9wYWNpdHk6IDAuNjtcXG59XFxuXFxuZm9ybXtcXG4gICAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuLmJ0bntcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBiYWNrZ3JvdW5kOiAwO1xcbiAgICBib3JkZXI6IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIGNvbG9yOiBpbmhlcml0O1xcbn1cXG5cXG4uYnRuLmNyZWF0ZXtcXG4gICAgZm9udC1zaXplOiAxLjdyZW07XFxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XFxuICAgIG1hcmdpbi1yaWdodDogMC4yNXJlbTtcXG5cXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAyNTBtcyBlYXNlLWluO1xcbn1cXG5cXG4uYnRuLmNyZWF0ZTpob3ZlcntcXG4gICAgb3BhY2l0eTogMC43O1xcbn1cXG5cXG4uYnRuLmRlbGV0ZXtcXG4gICAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtbGlnaHQpO1xcbiAgICBvcGFjaXR5OiAwLjk7XFxuICAgIGZvbnQtc2l6ZTogMXJlbTtcXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XFxuXFxufVxcblxcbi5idG4uZGVsZXRlOmhvdmVye1xcbiAgICBjb2xvcjogcmVkO1xcbn1cXG5cXG5cXG4ubmV3IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICAgIGJvcmRlcjogMDtcXG4gICAgY29sb3I6IGluaGVyaXQ7XFxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBjdXJyZW50Q29sb3I7XFxuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcXG4gICAgb3V0bGluZTogbm9uZTtcXG4gICAgcGFkZGluZzogMC4yNXJlbTtcXG5cXG5cXG4gICAgdHJhbnNpdGlvbjogYm9yZGVyLWJvdHRvbSAxNTBtcyBlYXNlLWluO1xcbiAgICBvcmRlcjogMjtcXG59XFxuXFxuLm5ldzo6cGxhY2Vob2xkZXJ7XFxuICAgIG9wYWNpdHk6IDAuNDtcXG59XFxuXFxuXFxuLm5ldzpmb2N1c3tcXG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogM3B4O1xcbn1cXG5cXG4ubmV3OmZvY3VzOjpwbGFjZWhvbGRlcntcXG4gICAgb3BhY2l0eTogMC4xNTtcXG59XFxuXFxuLm5ldy5saXN0e1xcbiAgICBmb250LXNpemU6IDFyZW07XFxufVxcblxcbi5uZXcudGFza3tcXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcXG59XFxuXFxuLmFjdGl2ZS1saXN0e1xcbiAgICBmb250LXdlaWdodDogdmFyKC0tZm9udC1ib2xkKTtcXG59XFxuXFxuLnRvZG8tbGlzdHtcXG4gICAgLS1zcGFjZXIgOiAycmVtO1xcblxcbiAgICBncmlkLWFyZWE6IGFjdGl2ZTtcXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XFxuICAgIGNvbG9yOiBibGFjaztcXG59XFxuXFxuLnRvZG8taGVhZGVye1xcbiAgICBwYWRkaW5nOiB2YXIoLS1zcGFjZXIpO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTRlNGU0O1xcbiAgIFxcblxcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuXFxufVxcblxcbi5saXN0LXRpdGxle1xcbiAgICBmb250LXNpemU6IHgtbGFyZ2U7XFxuICAgIG1hcmdpbjogMCAxcmVtIDAgMDtcXG59XFxuXFxuLnRhc2stY291bnR7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgZm9udC1zaXplOiAwLjlyZW07XFxufVxcblxcbi50b2RvLWJvZHl7XFxuICAgIHBhZGRpbmc6IHZhcigtLXNwYWNlcik7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXFxuLm5ldy10YXNrLWNyZWF0b3IgLmNyZWF0ZXtcXG4gICAgY29sb3I6IGJsYWNrO1xcbn1cXG5cXG4udGFza3N7XFxuICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xcbn1cXG5cXG5bdHlwZT1cXFwiY2hlY2tib3hcXFwiXSB7XFxuICAgIG9wYWNpdHk6IDA7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG59XFxuXFxuXFxuLnRhc2sgbGFiZWx7XFxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIFxcbn1cXG5cXG4udGFza3tcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICBtYXJnaW4tYm90dG9tOiAxLjI1ZW07XFxufVxcblxcbi50YXNrOjphZnRlcntcXG4gICAgY29udGVudDogXFxcIlxcXCI7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgaGVpZ2h0OiAxcHg7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICBsZWZ0OiAwO1xcbiAgICBib3R0b206IC0wLjVlbTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xcbiAgICBvcGFjaXR5OiAwLjE7XFxufVxcblxcbi5jdXN0b20tY2hlY2tib3h7XFxuICAgIC0tc2l6ZSA6IDAuNjVlbTtcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgICB3aWR0aDogdmFyKC0tc2l6ZSk7XFxuICAgIGhlaWdodDogdmFyKC0tc2l6ZSk7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYm9yZGVyOiAycHggc29saWQgY3VycmVudENvbG9yO1xcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICAgIG1hcmdpbi1yaWdodDogdmFyKC0tc2l6ZSk7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XFxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAyMDBtcyBlYXNlLWluLW91dDtcXG59XFxuXFxuLnRhc2s6aG92ZXIgLmN1c3RvbS1jaGVja2JveCxcXG5bdHlwZT1cXFwiY2hlY2tib3hcXFwiXTpmb2N1cyArIGxhYmVsIC5jdXN0b20tY2hlY2tib3ggIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjMpO1xcbiAgICBjb2xvcjogdmFyKC0tYmctY29sb3IpLCA7XFxufVxcblxcblt0eXBlPVxcXCJjaGVja2JveFxcXCJdOmNoZWNrZWQgKyBsYWJlbCAuY3VzdG9tLWNoZWNrYm94IHtcXG4gICAgYmFja2dyb3VuZDogdmFyKC0tYmctY29sb3IpO1xcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWJnLWNvbG9yKTtcXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMnB4IHdoaXRlO1xcbn1cXG5cXG5bdHlwZT1cXFwiY2hlY2tib3hcXFwiXTpjaGVja2VkICsgbGFiZWx7XFxuICAgIG9wYWNpdHk6IDAuNTtcXG59XFxuXFxuW3R5cGU9XFxcImNoZWNrYm94XFxcIl06Y2hlY2tlZCArIGxhYmVse1xcbiAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcXG59XFxuXFxuXFxuLmRlbGV0ZS1zdHVmZntcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGxlZnQ6IDA7XFxuICAgIGJvdHRvbTogLTM1cHg7XFxuICAgIGNvbG9yOiBibGFjaztcXG59XFxuXFxuXFxuXFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aCA6IDg2MHB4KXtcXG4gICAgYm9keXtcXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XFxuXFxuICAgICAgICBncmlkOiBcXG4gICAgICAgICAgICBcXFwiaGVhZGVyIGhlYWRlciBoZWFkZXJcXFwiIFxcbiAgICAgICAgICAgIFxcXCIuLi4uLi4gbGlzdHMgIC4uLi4uLlxcXCIgYXV0b1xcbiAgICAgICAgICAgIFxcXCIuLi4uLi4gYWN0aXZlIC4uLi4uLlxcXCIgYXV0byAvXFxuICAgICAgICAgICAgMWZyIG1pbm1heCgyNTBweCAsIDUwMHB4KSAxZnI7XFxuICAgIH1cXG5cXG4gICAgLmFsbC10YXNrc3tcXG4gICAgICAgIG1hcmdpbjogMCAwIDIwcHggMDtcXG4gICAgfVxcbn1cXG5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0ICcuL2Nzcy9zdHlsZS5jc3MnO1xuXG5jb25zdCBsaXN0c0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWxpc3RzXScpO1xuY29uc3QgbmV3TGlzdEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1uZXctbGlzdC1mb3JtXScpO1xuY29uc3QgbmV3TGlzdElucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbmV3LWxpc3QtaW5wdXRdJyk7XG5jb25zdCBkZWxldGVMaXN0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtZGVsZXRlLWxpc3QtYnV0dG9uXScpXG5jb25zdCBsaXN0RGlzcGxheUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWxpc3QtZGlzcGxheS1jb250YWluZXJdJylcbmNvbnN0IGxpc3RUaXRsZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1saXN0LXRpdGxlXScpXG5jb25zdCBsaXN0Q291bnRFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbGlzdC1jb3VudF0nKVxuY29uc3QgdGFza3NDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS10YXNrc10nKTtcbmNvbnN0IHRhc2tUZW1wbGF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrLXRlbXBsYXRlJylcbmNvbnN0IG5ld1Rhc2tGcm9tID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbmV3LXRhc2stZm9ybV0nKVxuY29uc3QgbmV3VGFza0lucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbmV3LXRhc2staW5wdXRdJylcbmNvbnN0IGNsZWFyQ29tcGxldGVUYXNrc0J1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWNsZWFyLWNvbXBsZXRlLXRhc2tzLWJ1dHRvbl0nKVxuXG5jb25zdCBMT0NBTF9TVE9SQUdFX0xJU1RfS0VZID0gJ3Rhc2subGlzdHMnXG5jb25zdCBMT0NBTF9TVE9SQUdFX1NFTEVDVEVEX0xJU1RfSURfS0VZID0gJ3Rhc2suc2VsZWN0ZWRMaXN0SWQnXG5sZXQgbGlzdHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKExPQ0FMX1NUT1JBR0VfTElTVF9LRVkpKSB8fCBbXTtcbmxldCBzZWxlY3RlZExpc3RJZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKExPQ0FMX1NUT1JBR0VfU0VMRUNURURfTElTVF9JRF9LRVkpO1xuXG5cbmxpc3RzQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJyAsIGUgPT57XG4gICAgaWYgKGUudGFyZ2V0LnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2xpJyl7XG4gICAgICAgIGNvbnNvbGUubG9nKGUudGFyZ2V0KVxuICAgICAgICBzZWxlY3RlZExpc3RJZCA9IGUudGFyZ2V0LmRhdGFzZXQubGlzdElkXG4gICAgICAgIHNhdmVBbmRSZW5kZXIoKTtcbiAgICB9XG59KVxuXG50YXNrc0NvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycgLCBlID0+IHtcbiAgICBpZiAoZS50YXJnZXQudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnaW5wdXQnKXtcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRMaXN0ID0gbGlzdHMuZmluZChsaXN0ID0+IGxpc3QuaWQgPT09IHNlbGVjdGVkTGlzdElkKVxuICAgICAgICBjb25zdCBzZWxlY3RlZFRhc2sgPSBzZWxlY3RlZExpc3QudGFza3MuZmluZCh0YXNrID0+IHRhc2suaWQgPT09IGUudGFyZ2V0LmlkKVxuICAgICAgICBzZWxlY3RlZFRhc2suY29tcGxldGUgPSBlLnRhcmdldC5jaGVja2VkXG4gICAgICAgIHNhdmUoKVxuICAgICAgICByZW5kZXJUYXNrQ291bnQoc2VsZWN0ZWRMaXN0KTtcbiAgICB9XG59KVxuXG5jbGVhckNvbXBsZXRlVGFza3NCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snICwgZSA9PiB7XG4gICAgY29uc3Qgc2VsZWN0ZWRMaXN0ID0gbGlzdHMuZmluZChsaXN0ID0+IGxpc3QuaWQgPT09IHNlbGVjdGVkTGlzdElkKTtcbiAgICBzZWxlY3RlZExpc3QudGFza3MgPSBzZWxlY3RlZExpc3QudGFza3MuZmlsdGVyKHRhc2sgPT4gIXRhc2suY29tcGxldGUpO1xuICAgIHNhdmVBbmRSZW5kZXIoKVxufSlcblxuZGVsZXRlTGlzdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycgLGU9PiB7XG4gICAgbGlzdHMgPSBsaXN0cy5maWx0ZXIobGlzdCA9PiBsaXN0LmlkICE9PSBzZWxlY3RlZExpc3RJZClcbiAgICBzZWxlY3RlZExpc3RJZCA9IG51bGw7XG4gICAgc2F2ZUFuZFJlbmRlcigpO1xufSlcblxuXG5cbm5ld0xpc3RGb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcgLCBlID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgbGlzdE5hbWUgPSBuZXdMaXN0SW5wdXQudmFsdWU7XG4gICAgaWYgKCBsaXN0TmFtZSA9PSAgbnVsbCB8fCBsaXN0TmFtZSA9PT0gJycpIHJldHVyblxuICAgIGNvbnN0IGxpc3QgPSBjcmVhdGVMaXN0KGxpc3ROYW1lKVxuICAgIG5ld0xpc3RJbnB1dC52YWx1ZSA9IG51bGw7XG4gICAgbGlzdHMucHVzaChsaXN0KVxuICAgIHNhdmVBbmRSZW5kZXIoKTtcbn0pXG5cbm5ld1Rhc2tGcm9tLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcgLCBlID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgdGFza05hbWUgPSBuZXdUYXNrSW5wdXQudmFsdWU7XG4gICAgaWYgKCB0YXNrTmFtZSA9PSAgbnVsbCB8fCB0YXNrTmFtZSA9PT0gJycpIHJldHVyblxuICAgIGNvbnN0IHRhc2sgPSBjcmVhdGVUYXNrKHRhc2tOYW1lKVxuICAgIG5ld1Rhc2tJbnB1dC52YWx1ZSA9IG51bGw7XG4gICAgY29uc3Qgc2VsZWN0ZWRMaXN0ID0gbGlzdHMuZmluZChsaXN0ID0+IGxpc3QuaWQgPT09IHNlbGVjdGVkTGlzdElkKVxuICAgIHNlbGVjdGVkTGlzdC50YXNrcy5wdXNoKHRhc2spXG4gICAgc2F2ZUFuZFJlbmRlcigpO1xufSlcblxuXG5mdW5jdGlvbiBjcmVhdGVMaXN0KG5hbWUpe1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkOiBEYXRlLm5vdygpLnRvU3RyaW5nKCkgLFxuICAgICAgICBuYW1lIDogbmFtZSxcbiAgICAgICAgdGFza3MgOiBbXVxuICAgIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlVGFzayAobmFtZSl7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaWQ6IERhdGUubm93KCkudG9TdHJpbmcoKSAsXG4gICAgICAgIG5hbWUgOiBuYW1lLFxuICAgICAgICBjb21wbGV0ZTogZmFsc2VcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHNhdmVBbmRSZW5kZXIoKSB7XG4gICAgc2F2ZSgpO1xuICAgIHJlbmRlcigpXG59XG5cbmZ1bmN0aW9uIHNhdmUoKXtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShMT0NBTF9TVE9SQUdFX0xJU1RfS0VZLCBKU09OLnN0cmluZ2lmeShsaXN0cykpXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oTE9DQUxfU1RPUkFHRV9TRUxFQ1RFRF9MSVNUX0lEX0tFWSwgc2VsZWN0ZWRMaXN0SWQpXG59XG5cbmZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICBjbGVhckVsZW1lbnQobGlzdHNDb250YWluZXIpXG4gICAgcmVuZGVyTGlzdCgpO1xuICAgIGNvbnN0IHNlbGVjdGVkTGlzdCA9IGxpc3RzLmZpbmQobGlzdCA9PiBsaXN0LmlkID09PSBzZWxlY3RlZExpc3RJZClcbiAgICBpZiAoc2VsZWN0ZWRMaXN0SWQgPT0gbnVsbCApe1xuICAgICAgICBsaXN0RGlzcGxheUNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCJcbiAgICB9ZWxzZSB7XG4gICAgICAgIGxpc3REaXNwbGF5Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSBcIlwiXG4gICAgICAgIGxpc3RUaXRsZUVsZW1lbnQuaW5uZXJUZXh0ID0gc2VsZWN0ZWRMaXN0Lm5hbWU7XG4gICAgICAgIHJlbmRlclRhc2tDb3VudChzZWxlY3RlZExpc3QpXG4gICAgICAgIGNsZWFyRWxlbWVudCh0YXNrc0NvbnRhaW5lcik7XG4gICAgICAgIHJlbmRlclRhc2tzKHNlbGVjdGVkTGlzdCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiByZW5kZXJUYXNrcyhzZWxlY3RlZExpc3Qpe1xuXG4gICAgc2VsZWN0ZWRMaXN0LnRhc2tzLmZvckVhY2godGFzayA9PntcbiAgICAgICAgY29uc3QgdGFza0VsZW1lbnQgPSBkb2N1bWVudC5pbXBvcnROb2RlKHRhc2tUZW1wbGF0ZS5jb250ZW50LCB0cnVlKVxuICAgICAgICBjb25zdCBjaGVja0JveCA9IHRhc2tFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0Jyk7XG4gICAgICAgIGNoZWNrQm94LmlkID0gdGFzay5pZFxuICAgICAgICBjaGVja0JveC5jaGVja2VkID0gdGFzay5jb21wbGV0ZVxuICAgICAgICBjb25zdCBsYWJlbCA9IHRhc2tFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2xhYmVsJyk7XG4gICAgICAgIGxhYmVsLmh0bWxGb3IgPSB0YXNrLmlkXG4gICAgICAgIGxhYmVsLmFwcGVuZCh0YXNrLm5hbWUpXG4gICAgICAgIHRhc2tzQ29udGFpbmVyLmFwcGVuZENoaWxkKHRhc2tFbGVtZW50KVxuICAgIH0pXG59XG5cbmZ1bmN0aW9uIHJlbmRlclRhc2tDb3VudChzZWxlY3RlZExpc3Qpe1xuICAgIGNvbnN0IGluY29tcGxldGVUYXNrQ291bnQgPSBzZWxlY3RlZExpc3QudGFza3MuZmlsdGVyKHRhc2sgPT4gIXRhc2suY29tcGxldGUpLmxlbmd0aFxuICAgIGNvbnN0IHRhc2tTdHJpbmcgID0gaW5jb21wbGV0ZVRhc2tDb3VudCA9PT0gMSA/IFwidGFza1wiIDogXCJ0YXNrc1wiXG4gICAgbGlzdENvdW50RWxlbWVudC5pbm5lclRleHQgPSBgJHtpbmNvbXBsZXRlVGFza0NvdW50fSAke3Rhc2tTdHJpbmd9IHJlbWFpbmluZ2Bcbn1cblxuZnVuY3Rpb24gcmVuZGVyTGlzdCgpIHtcbiAgICBsaXN0cy5mb3JFYWNoKGxpc3QgPT4ge1xuICAgICAgICBjb25zdCBsaXN0RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgICAgIGxpc3RFbGVtZW50LmRhdGFzZXQubGlzdElkID0gbGlzdC5pZFxuICAgICAgICBsaXN0RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwibGlzdC1uYW1lXCIpXG4gICAgICAgIGxpc3RFbGVtZW50LmlubmVyVGV4dCA9IGxpc3QubmFtZVxuICAgICAgICBpZiggbGlzdC5pZCA9PT0gc2VsZWN0ZWRMaXN0SWQpe1xuICAgICAgICAgICAgbGlzdEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnYWN0aXZlLWxpc3QnKVxuICAgICAgICB9XG4gICAgICAgIGxpc3RzQ29udGFpbmVyLmFwcGVuZENoaWxkKGxpc3RFbGVtZW50KVxuICAgIH0pXG59XG5cbmZ1bmN0aW9uIGNsZWFyRWxlbWVudChlbGVtZW50KXtcbiAgICAgd2hpbGUoZWxlbWVudC5maXJzdENoaWxkKXtcbiAgICAgICAgZWxlbWVudC5yZW1vdmVDaGlsZChlbGVtZW50LmZpcnN0Q2hpbGQpXG4gICAgIH1cbn1cblxuXG5cbnJlbmRlcigpXG5cbmxvY2FsU3RvcmFnZS5jbGVhcigpOyJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJsb2NhbHMiLCJsaXN0c0NvbnRhaW5lciIsIm5ld0xpc3RGb3JtIiwibmV3TGlzdElucHV0IiwiZGVsZXRlTGlzdEJ1dHRvbiIsImxpc3REaXNwbGF5Q29udGFpbmVyIiwibGlzdFRpdGxlRWxlbWVudCIsImxpc3RDb3VudEVsZW1lbnQiLCJ0YXNrc0NvbnRhaW5lciIsInRhc2tUZW1wbGF0ZSIsImdldEVsZW1lbnRCeUlkIiwibmV3VGFza0Zyb20iLCJuZXdUYXNrSW5wdXQiLCJjbGVhckNvbXBsZXRlVGFza3NCdXR0b24iLCJMT0NBTF9TVE9SQUdFX0xJU1RfS0VZIiwiTE9DQUxfU1RPUkFHRV9TRUxFQ1RFRF9MSVNUX0lEX0tFWSIsImxpc3RzIiwicGFyc2UiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwic2VsZWN0ZWRMaXN0SWQiLCJzYXZlQW5kUmVuZGVyIiwic2F2ZSIsInJlbmRlciIsInNldEl0ZW0iLCJjbGVhckVsZW1lbnQiLCJmb3JFYWNoIiwibGlzdEVsZW1lbnQiLCJkYXRhc2V0IiwibGlzdElkIiwiY2xhc3NMaXN0IiwiYWRkIiwiaW5uZXJUZXh0IiwibmFtZSIsInNlbGVjdGVkTGlzdCIsImZpbmQiLCJkaXNwbGF5IiwicmVuZGVyVGFza0NvdW50IiwidGFza3MiLCJ0YXNrIiwidGFza0VsZW1lbnQiLCJpbXBvcnROb2RlIiwiY2hlY2tCb3giLCJjaGVja2VkIiwiY29tcGxldGUiLCJsYWJlbCIsImh0bWxGb3IiLCJhcHBlbmQiLCJyZW5kZXJUYXNrcyIsImluY29tcGxldGVUYXNrQ291bnQiLCJmaWx0ZXIiLCJ0YXNrU3RyaW5nIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRhZ05hbWUiLCJ0b0xvd2VyQ2FzZSIsImNvbnNvbGUiLCJsb2ciLCJwcmV2ZW50RGVmYXVsdCIsImxpc3ROYW1lIiwidmFsdWUiLCJEYXRlIiwibm93IiwidGFza05hbWUiLCJjbGVhciJdLCJzb3VyY2VSb290IjoiIn0=