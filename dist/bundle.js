(()=>{"use strict";var n={402:(n,e,t)=>{t.d(e,{Z:()=>i});var o=t(537),r=t.n(o),A=t(645),a=t.n(A)()(r());a.push([n.id,':root{\n    --bg-color :  rgb(0, 255, 187);\n    --font-fam : \'Poppins\', sans-serif;\n    --clr-white : #fff;\n    --clr-dark : #000000dc;\n    --font-light : 300;\n    --font-semi-bold : 500;\n    --font-bold : 700;\n    --font-size : 1.5rem;\n}\n\n*{\n    font-family: var(--font-fam);\n    box-sizing: border-box;\n}\n\nbody{\n    font-size: 1.1rem;\n    box-sizing: border-box;\n    margin: 0;\n    background-color: var(--bg-color);\n    display: flex;\n    flex-direction: column;\n    column-gap: 50px;\n}\n\n#wrapper{\n    display: flex;\n    gap: 20px;\n}\n\n.all-tasks{\n    margin-right: 20px;\n}\n\n.title{\n    text-align: center;\n    font-size: calc(8vw + 1rem);\n    font-weight: 900;\n    color: rgba(0, 0, 0, 0.1);\n    margin: -0.4em 0 0.1em;\n    \n}\n\n.task-list{\n    line-height: 1.7;\n    font-size: 1.2rem;\n    list-style: circle;\n    padding-left: 1.1em;\n}\n\n.list-name{\n    cursor: pointer;\n    transition: all 0.1s ease;\n}\n\n.list-name:hover{\n    opacity: 0.6;\n}\n\nform{\n    display: flex;\n    box-sizing: border-box;\n}\n\n.btn{\n    cursor: pointer;\n    background: 0;\n    border: 0;\n    padding: 0;\n    color: inherit;\n}\n\n.btn.create{\n    font-size: 1.7rem;\n    font-weight: 900;\n    margin-right: 0.25rem;\n\n    transition: opacity 250ms ease-in;\n}\n\n.btn.create:hover{\n    opacity: 0.7;\n}\n\n.btn.delete{\n    font-weight: var(--font-light);\n    opacity: 0.9;\n    font-size: 1rem;\n    transition: all 0.2s;\n\n}\n\n.btn.delete:hover{\n    color: red;\n}\n\n\n.new {\n    background-color: transparent;\n    border: 0;\n    color: inherit;\n    border-bottom: 1px solid currentColor;\n    font-size: inherit;\n    outline: none;\n    padding: 0.25rem;\n\n\n    transition: border-bottom 150ms ease-in;\n    order: 2;\n}\n\n.new::placeholder{\n    opacity: 0.4;\n}\n\n\n.new:focus{\n    border-bottom-width: 3px;\n}\n\n.new:focus::placeholder{\n    opacity: 0.15;\n}\n\n.new.list{\n    font-size: 1rem;\n}\n\n.new.task{\n    margin-bottom: 0;\n}\n\n.active-list{\n    font-weight: var(--font-bold);\n}\n\n.todo-list{\n    --spacer : 2rem;\n\n    background: white;\n    color: black;\n}\n\n.todo-header{\n    padding: var(--spacer);\n    background-color: #e4e4e4;\n   \n\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n}\n\n.list-title{\n    font-size: x-large;\n    margin: 0 1rem 0 0;\n}\n\n.task-count{\n    margin: 0;\n    font-size: 0.9rem;\n}\n\n.todo-body{\n    padding: var(--spacer);\n    position: relative;\n}\n\n.new-task-creator .create{\n    color: black;\n}\n\n.tasks{\n    font-size: 1.1rem;\n}\n\n[type="checkbox"] {\n    opacity: 0;\n    position: absolute;\n}\n\n\n.task label{\n    display: inline-flex;\n    align-items: center;\n    position: relative;\n    \n}\n\n.task{\n    position: relative;\n    margin-bottom: 1.25em;\n}\n\n.task::after{\n    content: "";\n    position: absolute;\n    height: 1px;\n    right: 0;\n    left: 0;\n    bottom: -0.5em;\n    background-color: currentColor;\n    opacity: 0.1;\n}\n\n.custom-checkbox{\n    --size : 0.65em;\n    display: inline-block;\n    width: var(--size);\n    height: var(--size);\n    cursor: pointer;\n    border: 2px solid currentColor;\n    border-radius: 50%;\n    margin-right: var(--size);\n    transform: scale(1);\n    transition: transform 200ms ease-in-out;\n}\n\n.task:hover .custom-checkbox,\n[type="checkbox"]:focus + label .custom-checkbox  {\n    transform: scale(1.3);\n    color: var(--bg-color), ;\n}\n\n[type="checkbox"]:checked + label .custom-checkbox {\n    background: var(--bg-color);\n    border-color: var(--bg-color);\n    box-shadow: inset 0 0 0 2px white;\n}\n\n[type="checkbox"]:checked + label{\n    opacity: 0.5;\n}\n\n[type="checkbox"]:checked + label{\n    text-decoration: line-through;\n    transition: all 0.3s ease;\n}\n\n\n.delete-stuff{\n    display: flex;\n    justify-content: space-evenly;\n    position: absolute;\n    width: 100%;\n    left: 0;\n    bottom: -35px;\n    color: black;\n}\n\n\n\n@media screen and (max-width : 860px){\n    body{\n        display: flex;\n        flex-direction: column;\n        max-width: 90%;\n        margin: 0 auto;\n        box-sizing: border-box;\n    }\n\n    #wrapper{\n        display: flex;\n        flex-direction: column;\n        gap: 20px;\n    }\n\n    .all-tasks{\n        margin-bottom: 20px;\n    }\n}\n\n',"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"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",sourcesContent:[':root{\n    --bg-color :  rgb(0, 255, 187);\n    --font-fam : \'Poppins\', sans-serif;\n    --clr-white : #fff;\n    --clr-dark : #000000dc;\n    --font-light : 300;\n    --font-semi-bold : 500;\n    --font-bold : 700;\n    --font-size : 1.5rem;\n}\n\n*{\n    font-family: var(--font-fam);\n    box-sizing: border-box;\n}\n\nbody{\n    font-size: 1.1rem;\n    box-sizing: border-box;\n    margin: 0;\n    background-color: var(--bg-color);\n    display: flex;\n    flex-direction: column;\n    column-gap: 50px;\n}\n\n#wrapper{\n    display: flex;\n    gap: 20px;\n}\n\n.all-tasks{\n    margin-right: 20px;\n}\n\n.title{\n    text-align: center;\n    font-size: calc(8vw + 1rem);\n    font-weight: 900;\n    color: rgba(0, 0, 0, 0.1);\n    margin: -0.4em 0 0.1em;\n    \n}\n\n.task-list{\n    line-height: 1.7;\n    font-size: 1.2rem;\n    list-style: circle;\n    padding-left: 1.1em;\n}\n\n.list-name{\n    cursor: pointer;\n    transition: all 0.1s ease;\n}\n\n.list-name:hover{\n    opacity: 0.6;\n}\n\nform{\n    display: flex;\n    box-sizing: border-box;\n}\n\n.btn{\n    cursor: pointer;\n    background: 0;\n    border: 0;\n    padding: 0;\n    color: inherit;\n}\n\n.btn.create{\n    font-size: 1.7rem;\n    font-weight: 900;\n    margin-right: 0.25rem;\n\n    transition: opacity 250ms ease-in;\n}\n\n.btn.create:hover{\n    opacity: 0.7;\n}\n\n.btn.delete{\n    font-weight: var(--font-light);\n    opacity: 0.9;\n    font-size: 1rem;\n    transition: all 0.2s;\n\n}\n\n.btn.delete:hover{\n    color: red;\n}\n\n\n.new {\n    background-color: transparent;\n    border: 0;\n    color: inherit;\n    border-bottom: 1px solid currentColor;\n    font-size: inherit;\n    outline: none;\n    padding: 0.25rem;\n\n\n    transition: border-bottom 150ms ease-in;\n    order: 2;\n}\n\n.new::placeholder{\n    opacity: 0.4;\n}\n\n\n.new:focus{\n    border-bottom-width: 3px;\n}\n\n.new:focus::placeholder{\n    opacity: 0.15;\n}\n\n.new.list{\n    font-size: 1rem;\n}\n\n.new.task{\n    margin-bottom: 0;\n}\n\n.active-list{\n    font-weight: var(--font-bold);\n}\n\n.todo-list{\n    --spacer : 2rem;\n\n    background: white;\n    color: black;\n}\n\n.todo-header{\n    padding: var(--spacer);\n    background-color: #e4e4e4;\n   \n\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n}\n\n.list-title{\n    font-size: x-large;\n    margin: 0 1rem 0 0;\n}\n\n.task-count{\n    margin: 0;\n    font-size: 0.9rem;\n}\n\n.todo-body{\n    padding: var(--spacer);\n    position: relative;\n}\n\n.new-task-creator .create{\n    color: black;\n}\n\n.tasks{\n    font-size: 1.1rem;\n}\n\n[type="checkbox"] {\n    opacity: 0;\n    position: absolute;\n}\n\n\n.task label{\n    display: inline-flex;\n    align-items: center;\n    position: relative;\n    \n}\n\n.task{\n    position: relative;\n    margin-bottom: 1.25em;\n}\n\n.task::after{\n    content: "";\n    position: absolute;\n    height: 1px;\n    right: 0;\n    left: 0;\n    bottom: -0.5em;\n    background-color: currentColor;\n    opacity: 0.1;\n}\n\n.custom-checkbox{\n    --size : 0.65em;\n    display: inline-block;\n    width: var(--size);\n    height: var(--size);\n    cursor: pointer;\n    border: 2px solid currentColor;\n    border-radius: 50%;\n    margin-right: var(--size);\n    transform: scale(1);\n    transition: transform 200ms ease-in-out;\n}\n\n.task:hover .custom-checkbox,\n[type="checkbox"]:focus + label .custom-checkbox  {\n    transform: scale(1.3);\n    color: var(--bg-color), ;\n}\n\n[type="checkbox"]:checked + label .custom-checkbox {\n    background: var(--bg-color);\n    border-color: var(--bg-color);\n    box-shadow: inset 0 0 0 2px white;\n}\n\n[type="checkbox"]:checked + label{\n    opacity: 0.5;\n}\n\n[type="checkbox"]:checked + label{\n    text-decoration: line-through;\n    transition: all 0.3s ease;\n}\n\n\n.delete-stuff{\n    display: flex;\n    justify-content: space-evenly;\n    position: absolute;\n    width: 100%;\n    left: 0;\n    bottom: -35px;\n    color: black;\n}\n\n\n\n@media screen and (max-width : 860px){\n    body{\n        display: flex;\n        flex-direction: column;\n        max-width: 90%;\n        margin: 0 auto;\n        box-sizing: border-box;\n    }\n\n    #wrapper{\n        display: flex;\n        flex-direction: column;\n        gap: 20px;\n    }\n\n    .all-tasks{\n        margin-bottom: 20px;\n    }\n}\n\n'],sourceRoot:""}]);const i=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,A){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(a[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&a[l[0]]||(void 0!==A&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=A),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),A="/*# ".concat(r," */");return[e].concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var A={},a=[],i=0;i<n.length;i++){var s=n[i],c=o.base?s[0]+o.base:s[0],l=A[c]||0,d="".concat(c," ").concat(l);A[c]=l+1;var p=t(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var B=r(u,o);o.byIndex=i,e.splice(i,0,{identifier:d,updater:B,references:1})}a.push(d)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var A=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<A.length;a++){var i=t(A[a]);e[i].references--}for(var s=o(n,r),c=0;c<A.length;c++){var l=t(A[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}A=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var A=e[o]={id:o,exports:{}};return n[o](A,A.exports,t),A.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),A=t(569),a=t.n(A),i=t(565),s=t.n(i),c=t(216),l=t.n(c),d=t(589),p=t.n(d),u=t(402),B={};B.styleTagTransform=p(),B.setAttributes=s(),B.insert=a().bind(null,"head"),B.domAPI=r(),B.insertStyleElement=l(),e()(u.Z,B),u.Z&&u.Z.locals&&u.Z.locals;const m=document.querySelector("[data-lists]"),f=document.querySelector("[data-new-list-form]"),C=document.querySelector("[data-new-list-input]"),b=document.querySelector("[data-delete-list-button]"),I=document.querySelector("[data-list-display-container]"),g=document.querySelector("[data-list-title]"),h=document.querySelector("[data-list-count]"),k=document.querySelector("[data-tasks]"),y=document.getElementById("task-template"),v=document.querySelector("[data-new-task-form]"),x=document.querySelector("[data-new-task-input]"),w=document.querySelector("[data-clear-complete-tasks-button]"),E="task.lists",z="task.selectedListId";let S=JSON.parse(localStorage.getItem(E))||[],q=localStorage.getItem(z);function j(){Y(),T()}function Y(){localStorage.setItem(E,JSON.stringify(S)),localStorage.setItem(z,q)}function T(){Q(m),S.forEach((n=>{const e=document.createElement("li");e.dataset.listId=n.id,e.classList.add("list-name"),e.innerText=n.name,n.id===q&&e.classList.add("active-list"),m.appendChild(e)}));const n=S.find((n=>n.id===q));null==n?I.style.display="none":(I.style.display="",g.innerText=n.name,L(n),Q(k),function(n){n.tasks.forEach((n=>{const e=document.importNode(y.content,!0),t=e.querySelector("input");t.id=n.id,t.checked=n.complete;const o=e.querySelector("label");o.htmlFor=n.id,o.append(n.name),k.appendChild(e)}))}(n))}function L(n){const e=n.tasks.filter((n=>!n.complete)).length,t=1===e?"task":"tasks";h.innerText=`${e} ${t} remaining`}function Q(n){for(;n.firstChild;)n.removeChild(n.firstChild)}m.addEventListener("click",(n=>{"li"===n.target.tagName.toLowerCase()&&(console.log(n.target),q=n.target.dataset.listId,j())})),k.addEventListener("click",(n=>{if("input"===n.target.tagName.toLowerCase()){const e=S.find((n=>n.id===q));e.tasks.find((e=>e.id===n.target.id)).complete=n.target.checked,Y(),L(e)}})),w.addEventListener("click",(n=>{const e=S.find((n=>n.id===q));e.tasks=e.tasks.filter((n=>!n.complete)),j()})),b.addEventListener("click",(n=>{S=S.filter((n=>n.id!==q)),q=null,j()})),f.addEventListener("submit",(n=>{n.preventDefault();const e=C.value;if(null==e||""===e)return;const t=(o=e,{id:Date.now().toString(),name:o,tasks:[]});var o;C.value=null,S.push(t),j()})),v.addEventListener("submit",(n=>{n.preventDefault();const e=x.value;if(null==e||""===e)return;const t=(o=e,{id:Date.now().toString(),name:o,complete:!1});var o;x.value=null,S.find((n=>n.id===q)).tasks.push(t),j()})),T()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,